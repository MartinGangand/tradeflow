name: Upload Python Package to Test PyPi

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  update-package-version:
    name: Update package version
    runs-on: ubuntu-latest

    outputs:
      SNAPSHOT_VERSION: ${{ steps.construct-snapshot-version.outputs.SNAPSHOT_VERSION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get package version from pyproject.toml
        id: get-package-version
        run: |
          PACKAGE_VERSION=$(grep ^version pyproject.toml | cut -d '"' -f 2)
          echo "Package version: $PACKAGE_VERSION"

          # Set package version as output variable
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_OUTPUT

      - name: Construct snapshot version
        id: construct-snapshot-version
        run: |
          CURRENT_DATE_TIME=$(date +"%Y.%-m.%-d.%-H.%-M.%-S")
          SNAPSHOT_VERSION="${{ steps.get-package-version.outputs.PACKAGE_VERSION }}.$CURRENT_DATE_TIME"
          echo "Snapshot version: $SNAPSHOT_VERSION"

          # Set snapshot version as output variable
          echo "SNAPSHOT_VERSION=$SNAPSHOT_VERSION" >> $GITHUB_OUTPUT

      - name: Replace package version in pyproject.toml
        run: |
          sed -i "s+version = \"${{ steps.get-package-version.outputs.PACKAGE_VERSION }}\"+version = \"${{ steps.construct-snapshot-version.outputs.SNAPSHOT_VERSION }}\"+g" pyproject.toml

      - name: Upload updated pyproject.toml as artifact
        uses: actions/upload-artifact@v4
        with:
          name: pyproject-toml
          path: pyproject.toml

  build-distribution-package:
    name: Build distribution package
    needs: [update-package-version]
    uses: ./.github/workflows/build-distribution-package.yml

  upload-test-pypi:
    name: Upload Package to Test PyPi
    needs: [build-distribution-package]
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/tradeflow

    permissions:
      id-token: write

    steps:
      - name: Unpacks all CIBW artifacts into dist/
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Publish release distributions to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  verify-uploaded-content-test-pypi:
    name: Verify Uploaded Package Content on Test PyPi
    needs: [update-package-version, upload-test-pypi]
    uses: ./.github/workflows/verify-uploaded-package-content.yml
    with:
      package-index: test.pypi
      package-version: ${{ needs.update-package-version.outputs.SNAPSHOT_VERSION }}

  wait-before-check:
    # Wait some time before installing the package, otherwise it might not install the freshly uploaded version
    name: Wait before checking package installation
    needs: [upload-test-pypi]
    runs-on: ubuntu-latest
    steps:
      - name: Sleep for 4 minutes
        run: sleep 240

  check-package-installation-and-usage-test-pypi:
    name: Install package from Test PyPi and test basic functionality
    needs: [update-package-version, upload-test-pypi, wait-before-check]
    uses: ./.github/workflows/check-package-installation-and-usage.yml
    with:
      package-index: test.pypi
      package-version: ${{ needs.update-package-version.outputs.SNAPSHOT_VERSION }}
      install-default-version: false
